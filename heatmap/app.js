import*as d3 from"https://cdn.skypack.dev/d3@7";const url="https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/global-temperature.json";function render(t){console.log("Data:",t);const a=["#d73027","#f46d43","#fdae61","#fee090","#ffffbf","#e0f3f8","#abd9e9","#74add1","#4575b4"],e=d3.select("body").append("section"),r=e.append("heading");r.append("h1").attr("id","title").text("Monthly Global Land-Surface Temperature"),r.append("h3").attr("id","description").text(`${t.monthlyVariance[0].year} - ${t.monthlyVariance[t.monthlyVariance.length-1].year} Base temperature = ${t.baseTemperature}° C`);const n=1200,d=t.monthlyVariance.map((({year:t,month:a})=>new Date(t,a-1))),o=t.monthlyVariance.map((({variance:a})=>t.baseTemperature+a));console.log(o);const l=d3.scaleTime().domain(d3.extent(d)).range([0,n]),c=d3.scaleTime().domain([new Date(2021,-1,15),new Date(2021,11,15)]).range([280,0]),s=d3.axisBottom(l),i=d3.axisLeft(c).tickFormat(d3.timeFormat("%B")),m=e.append("svg").attr("x",0).attr("y",0).attr("width",n).attr("height",540);m.append("g").attr("transform","translate(120,340)").attr("id","x-axis").call(s),m.append("text").attr("text-anchor","middle").attr("x",600).attr("y",400).text("Year"),m.append("g").attr("transform","translate(120, 60)").attr("id","y-axis").call(i),m.append("text").attr("transform","rotate(-90)").attr("text-anchor","end").attr("x",-200).attr("y",50).text("Months");const p=280/12,h=n/t.monthlyVariance.length*12;m.append("g").attr("transform","translate(60, 0)").selectAll("rect").data(t.monthlyVariance).enter().append("rect").attr("width",h).attr("height",p).attr("x",(t=>l(new Date(t.year,0))+60)).attr("y",(t=>c(new Date(2021,t.month-1))+60-p/2)).attr("class","cell").style("fill",(e=>function(e){const r=a.length,n=d3.scaleLinear().domain(d3.extent(t.monthlyVariance.map((({variance:t})=>t)))).range([r,0]),d=Math.round(n(e));return a[d]}(e.variance))).attr("data-month",(t=>t.month-1)).attr("data-year",(t=>t.year)).attr("data-temp",(a=>t.baseTemperature+a.variance));const g=m.append("g");g.attr("id","legend").attr("transform","translate(120, 400)");g.append("g").selectAll("rect").data(a.reverse()).enter().append("rect").attr("class","lc").attr("x",((t,a)=>30*a)).attr("y",0).attr("width",30).attr("height",30).style("fill",(t=>t));const f=d3.scaleThreshold().domain(((t,a,e)=>{const r=[],n=(a-t)/e,d=t;for(let t=1;t<e;t+=1)r.push(d+n*t);return r})(d3.min(o),d3.max(o),a.length)).range([a]),x=d3.scaleLinear().domain(d3.extent(o)).range([0,30*a.length]),y=d3.axisBottom(x).tickSize(10,0).tickValues(f.domain()).tickFormat(d3.format(".1f"));g.append("g").attr("id","legend-axis").attr("transform","translate(0, 30)").call(y),g.append("text").attr("text-anchor","middle").attr("x",30*a.length/2).attr("y",90).text("Temperature in ° C")}d3.json(url).then((t=>render(t))).catch((t=>console.log(t)));